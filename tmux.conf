set -g default-terminal tmux-256color
# screen like prefix key
unbind C-b
set -g prefix C-a

set -g history-limit 10000

bind-key C-n next-window
bind-key C-p previous-window
bind-key C-a last-window
bind-key C-c new-window
bind-key C-v send-prefix
bind-key a last-window
bind-key Escape copy-mode

set -g mode-keys vi
# vim like copy keybinding
unbind-key -T copy-mode-vi v
unbind-key -T copy-mode-vi y
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# open url from visible area in default browser
# temp arrray `u` is needed because its index is known after prompt
bind-key g run-shell '\
urls=($(tmux capture-pane -J -p | grep -oE "https?://[^ ]+" | tac)); \
case ${#urls[@]} in \
    0) tmux display-message "no url found" \
        ;; \
    1) xdg-open "${urls[0]}" \
        ;; \
    *) for i in "${!urls[@]}"; do echo "[$i] ${urls[i]}"; done; \
       urls=($(printf "%q\n" "${urls[@]}")); \
       cmd=$(printf "%q\n" "u=(${urls[@]}); xdg-open \${u[\$((%1 + 0))]}; tmux send-keys q "); \
       tmux command-prompt -p "please choose url by number [default 0]:" "run-shell \"$cmd\"" \
        ;; \
esac'

# less delay in vim
set-option -sg escape-time 50
run 'chmod 700 /tmp/tmux-*/*'
# Remove smcup and rmcup capabilties which forces tmux to use the
# normal screen instead of the alternate screen. Since xterm only
# saves scrollback for the normal screen this effectively enables
# xterm's shift-pgdn/pgup to move the scrollback.
# The Tc capability is not supported by terminfo and is used in
# tmux to indicated true color support.
set -g terminal-overrides 'xterm*:smcup@:rmcup@:Tc'
set -g renumber-windows on
set -g set-titles on
set -g set-titles-string 'TMUX - #{?#{==:#T,#H},#W,#T}'

set -g status-style fg=green,bg=black
set -g window-status-format '#I:#W'
set -g status-left '#[fg=white]»'
set -g status-right '#[fg=green]#T '
set -g window-status-current-style bg=red
##CLIPBOARD selection integration
##Requires prefix key before the command key
##Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
#bind | split-window -h
#bind – split-window -v
